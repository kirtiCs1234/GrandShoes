//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GrandShoesEntities : DbContext
    {
        public GrandShoesEntities()
            : base("GrandShoesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ActionExistence> ActionExistences { get; set; }
        public virtual DbSet<ActionLog> ActionLogs { get; set; }
        public virtual DbSet<ActionName> ActionNames { get; set; }
        public virtual DbSet<ActionPage> ActionPages { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<BranchDiscount> BranchDiscounts { get; set; }
        public virtual DbSet<Buyer> Buyers { get; set; }
        public virtual DbSet<CartonManagement> CartonManagements { get; set; }
        public virtual DbSet<CartonManagementDetail> CartonManagementDetails { get; set; }
        public virtual DbSet<CartonMgmtDetailsStockTransfer> CartonMgmtDetailsStockTransfers { get; set; }
        public virtual DbSet<CartonMgmtStockTransfer> CartonMgmtStockTransfers { get; set; }
        public virtual DbSet<Cluster> Clusters { get; set; }
        public virtual DbSet<ClusterBranch> ClusterBranches { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<ConnectionInfo> ConnectionInfoes { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<DiscountBranch> DiscountBranches { get; set; }
        public virtual DbSet<DiscountSummary> DiscountSummaries { get; set; }
        public virtual DbSet<FTPInfo> FTPInfoes { get; set; }
        public virtual DbSet<IBTBranch> IBTBranches { get; set; }
        public virtual DbSet<IBTDetail> IBTDetails { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<LayBaySale> LayBaySales { get; set; }
        public virtual DbSet<LaybyeSale> LaybyeSales { get; set; }
        public virtual DbSet<LengthMeasure> LengthMeasures { get; set; }
        public virtual DbSet<Log> Logs { get; set; }
        public virtual DbSet<MarkDown> MarkDowns { get; set; }
        public virtual DbSet<MarkDownBranch> MarkDownBranches { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<PageName> PageNames { get; set; }
        public virtual DbSet<PagePermission> PagePermissions { get; set; }
        public virtual DbSet<PendingItemReceipt> PendingItemReceipts { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductCat1> ProductCat1 { get; set; }
        public virtual DbSet<ProductCat2> ProductCat2 { get; set; }
        public virtual DbSet<ProductCat3> ProductCat3 { get; set; }
        public virtual DbSet<ProductCat4> ProductCat4 { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductGrp> ProductGrps { get; set; }
        public virtual DbSet<ProductSize> ProductSizes { get; set; }
        public virtual DbSet<ProductSource> ProductSources { get; set; }
        public virtual DbSet<ProductStyle> ProductStyles { get; set; }
        public virtual DbSet<ProductVariance> ProductVariances { get; set; }
        public virtual DbSet<PromotionalDiscount> PromotionalDiscounts { get; set; }
        public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public virtual DbSet<PurchaseOrderItem> PurchaseOrderItems { get; set; }
        public virtual DbSet<PurchaseOrderStatu> PurchaseOrderStatus { get; set; }
        public virtual DbSet<ReceiptOrderItem> ReceiptOrderItems { get; set; }
        public virtual DbSet<ReceiveOrder> ReceiveOrders { get; set; }
        public virtual DbSet<ReleaseLayBayItem> ReleaseLayBayItems { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SalesManu> SalesManus { get; set; }
        public virtual DbSet<SalesOrder> SalesOrders { get; set; }
        public virtual DbSet<SalesOrderItem> SalesOrderItems { get; set; }
        public virtual DbSet<SalesPerson> SalesPersons { get; set; }
        public virtual DbSet<SalesTransaction> SalesTransactions { get; set; }
        public virtual DbSet<Season> Seasons { get; set; }
        public virtual DbSet<SizeGrid> SizeGrids { get; set; }
        public virtual DbSet<SizeParameter> SizeParameters { get; set; }
        public virtual DbSet<SMIBranchDefault> SMIBranchDefaults { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<StaffCommition> StaffCommitions { get; set; }
        public virtual DbSet<StaffMember> StaffMembers { get; set; }
        public virtual DbSet<StaffRole> StaffRoles { get; set; }
        public virtual DbSet<StaffStatu> StaffStatus { get; set; }
        public virtual DbSet<StockAudit> StockAudits { get; set; }
        public virtual DbSet<StockBranchInventory> StockBranchInventories { get; set; }
        public virtual DbSet<StockBranchTransaction> StockBranchTransactions { get; set; }
        public virtual DbSet<StockDistribution> StockDistributions { get; set; }
        public virtual DbSet<StockDistributionStatu> StockDistributionStatus { get; set; }
        public virtual DbSet<StockDistributionSummary> StockDistributionSummaries { get; set; }
        public virtual DbSet<StockInventory> StockInventories { get; set; }
        public virtual DbSet<StockSupplierTransaction> StockSupplierTransactions { get; set; }
        public virtual DbSet<StockTape> StockTapes { get; set; }
        public virtual DbSet<StockTransactionType> StockTransactionTypes { get; set; }
        public virtual DbSet<StockTransferDetail> StockTransferDetails { get; set; }
        public virtual DbSet<StockWarehouseTransaction> StockWarehouseTransactions { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<Synchronise> Synchronises { get; set; }
        public virtual DbSet<Template> Templates { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TrasactionReference> TrasactionReferences { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Year> Years { get; set; }
        public virtual DbSet<t1> t1 { get; set; }
        public virtual DbSet<table1> table1 { get; set; }
        public virtual DbSet<View_RemainingStockByBranchByProduct> View_RemainingStockByBranchByProduct { get; set; }
    
        public virtual ObjectResult<SPGet_Data_For_Suggestions_Result> SPGet_Data_For_Suggestions(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTO, Nullable<int> productId)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("dateFrom", dateFrom) :
                new ObjectParameter("dateFrom", typeof(System.DateTime));
    
            var dateTOParameter = dateTO.HasValue ?
                new ObjectParameter("dateTO", dateTO) :
                new ObjectParameter("dateTO", typeof(System.DateTime));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPGet_Data_For_Suggestions_Result>("SPGet_Data_For_Suggestions", dateFromParameter, dateTOParameter, productIdParameter);
        }
    }
}
