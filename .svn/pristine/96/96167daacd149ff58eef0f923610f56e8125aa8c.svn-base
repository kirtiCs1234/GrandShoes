@model Model.PurchaseOrderItemsModel

@{
    ViewBag.Title = "Details";
    Layout = null;
}
<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Delete item</h4>
        </div>

        @using (Html.BeginForm("deleteItem", "purchaseOrder", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="modal-body">
                <p>Are you sure you want to delete this Item?</p>
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" data-target="#myModal" class="btn btn-outline-inverse">No</button>
                @*<input type="submit" value="Add" class="btn btn-success popup-savebtn" />*@
                <input type="submit" value="Yes" class="btn btn-success" onclick="Delete(@Model.ID,event)"/>

            </div>
        }
    </div>
</div>

<script type="text/javascript">
    debugger;
    $(".viewForm").find("input").attr("disabled", true);
    $(".viewForm").find("select").attr("disabled", true);
    function Delete(id,event){
        debugger;
        $.ajax({
            url: "/admin/purchaseOrder/deleteItem/"+id,                        
            type: 'post',
            success: function (result) {
              //  $("#myModal").modal("hide"); 
                debugger;
                var qty= parseFloat($("#Quantity").val());
                var removeQty=parseFloat($(deleteRow).children().eq(2)[0].innerHTML);
                qty -=removeQty;
                var amount=parseFloat($("#Amount").val());
                var removeAmount=parseFloat($(deleteRow).children().eq(3)[0].innerHTML);
                amount -= removeAmount;
                $("#Quantity").val(qty);
                $("#Amount").val(amount)
                $(deleteRow).remove();
                updatePurchaseOrder();
            },
            error: function (xhr, status) {
                alert(status)
            }
        });
        event.preventDefault();
    }

</script>

