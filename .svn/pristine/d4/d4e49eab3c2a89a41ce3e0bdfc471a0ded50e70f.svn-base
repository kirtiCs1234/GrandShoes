using Model;
using POS.Controllers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;

namespace POS.Areas.Admin.Controllers
{
    public class ProductCategoryController : BaseController
    {
        // GET: Admin/ProductCategory
        public ActionResult Index()
        {
            List<ProductCategoryModel> ProductCategoryModelList = Services.ProductCategoryService.GetAll();

            return View(ProductCategoryModelList);
        }
        public ActionResult Details(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
          
            ProductCategoryModel ProductCategoryModelById = Services.ProductCategoryService.GetById(id);
            return View(ProductCategoryModelById);
        }
        public ActionResult Create()
        {
            return View();
        }
        [HttpPost]
        public ActionResult Create(ProductCategoryModel productCategory)
        {
            var errors = ModelState.Values.SelectMany(v => v.Errors);
            if (ModelState.IsValid)
            {
                ProductCategoryModel ProductCategoryCreate = Services.ProductCategoryService.Create(productCategory);
                TempData["Success"] = "Data saved successfully!";
                return RedirectToAction("Index", "ProductCategory");
            }
            return View(productCategory);

        }
        public ActionResult Edit(int? id)

        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }

            ProductCategoryModel ProductCategoryModelById = Services.ProductCategoryService.GetById(id);
            return View(ProductCategoryModelById);
        }

        [HttpPost]
        public ActionResult Edit(ProductCategoryModel productCategory)
        {
            if (ModelState.IsValid)
            {

                ProductCategoryModel ProductCategoryEdit = Services.ProductCategoryService.Edit(productCategory);
                TempData["Success"] = "Data saved successfully!";
                return RedirectToAction("Index", "ProductCategory");
            }
            return View(productCategory);
        }
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            ProductCategoryModel ProductCategoryModelById = Services.ProductCategoryService.GetById(id);

            if (ProductCategoryModelById == null)
            {
                return HttpNotFound();
            }
            return View(ProductCategoryModelById);
        }
        [HttpPost, ActionName("Delete")]
        public ActionResult DeleteConfirmed(ProductCategoryModel productCategory)
        {
            if (productCategory.Id > 0)
            {
                ProductCategoryModel ProductCategoryDelete = Services.ProductCategoryService.Delete(productCategory);
                TempData["Success"] = "Data saved successfully!";
                return RedirectToAction("Index", "ProductCategory");
            }
            return View(productCategory);
        }
    }
}