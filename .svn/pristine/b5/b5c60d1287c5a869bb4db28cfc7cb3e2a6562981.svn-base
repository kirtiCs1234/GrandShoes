using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;
using System.Web.Mvc;
using Model;
using POS.Controllers;
using Helper;

namespace POS.Areas.Admin.Controllers
{
    [CustomAuth]
    public class PurchaseOrderReportController : BaseController
    {
        public ActionResult Index(int? page)
        {
            PurchaseOrderModel POR = new PurchaseOrderModel();

            var OrderStatus = Services.PurchaseOrderService.GetPurchaseOrderStatus();
            ViewBag.PurchaseOrderStatusId = new SelectList(OrderStatus, "Id", "OrderStatus");           
            //var allOrder = Services.PurchaseOrderService.GetAllPurchaseOrder();
            //POR.AllPurchaseList = allOrder;
            //return View(POR);
            int TotalCount = 0;
            var pageSize = 4;
            var pageNumber = page ?? 1;
            int CurrentPage = pageNumber;
            var endPage = CurrentPage + 4;
            int PagesToShow = 10;
            var PurchaseList = Services.PurchaseOrderService.GetPaging1(page, out TotalCount);
            POR.AllPurchaseList = PurchaseList;
            ViewBag.TotalCount = TotalCount;
            ViewBag.PageSize = pageSize;
            var result = Helper.CommonFunction.GetPages(TotalCount, pageSize, CurrentPage, PagesToShow);
            ViewBag.result = result;
            var pageCount = result.Count();
            ViewBag.pageCount = pageCount;
            ViewBag.CurrentPage = CurrentPage;
            ViewBag.endPage = endPage;
            return View(POR);



        }

        public ActionResult _Index1(PurchaseOrderSearchModel search ,int? page)
        {
        
            PurchaseOrderModel POR = new PurchaseOrderModel();                 
            int TotalCount = 0;
            var pageSize = 4;
            var pageNumber = page ?? 1;
            int CurrentPage = pageNumber;
            var endPage = CurrentPage + 4;
            int PagesToShow = 10;
           ViewBag.PageSize = pageSize;
           
                // PurchageList = Services.PurchaseOrderService.FindPurchaseOrderReport(purchaseOrder, page, out TotalCount);
             var PurchaseList = Services.PurchaseOrderService.GetSearchData1(search, page, out TotalCount);
                POR.AllPurchaseList = PurchaseList;
                ViewBag.TotalCount = TotalCount;

         
            ViewBag.TotalCount = TotalCount;
            var result = Helper.CommonFunction.GetPages(TotalCount, pageSize, CurrentPage, PagesToShow);
            ViewBag.result = result;
            ViewBag.CurrentPage = CurrentPage;
            var pageCount = result.Count();
            ViewBag.pageCount = pageCount;
            ViewBag.endPage = endPage;
            return View(POR);
        }  
    }
}
