using Helper;
using Model;
using Newtonsoft.Json;
using Services.IService;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Services.Service
{
   public class ReceiptOrderService: IReceiptOrderService
    {
        public ReceiptOrderViewModel GetAll()
        {
            var list = ServerResponse.Invoke<ReceiptOrderViewModel>("api/PurchaseOrder/GetAllPurchaseOrder","","GET");
            return list;
        }
        public List<ReceiptOrderItemModel> Create()
        {
            List<StockInventoryModel> result = new List<StockInventoryModel>();
            var list = ServerResponse.Invoke<List<ReceiptOrderItemModel>>("api/receiptOrderItems/getDetails","","GET");
            var group = list.ToList().GroupBy(m => new { m.ProductId, m.ProductStyleId });
            foreach(var item in group)
            {
                StockInventoryModel model = new StockInventoryModel();
                model.Quantity01 = item.Sum(x => x.Quantity01);
                model.Quantity02 = item.Sum(x => x.Quantity02);
                model.Quantity03 = item.Sum(x => x.Quantity03);
                model.Quantity04 = item.Sum(x => x.Quantity04);
                model.Quantity05 = item.Sum(x => x.Quantity05);
                model.Quantity06 = item.Sum(x=>x.Quantity06);
                model.Quantity07 = item.Sum(x => x.Quantity07);
                model.Quantity08 = item.Sum(x => x.Quantity08);
                model.Quantity09 = item.Sum(x => x.Quantity09);
                model.Quantity10 = item.Sum(x => x.Quantity10);
                model.Quantity11 = item.Sum(x => x.Quantity11);
                model.Quantity12 = item.Sum(x => x.Quantity12);
                model.Quantity13 = item.Sum(x => x.Quantity13);
                model.Quantity14 = item.Sum(x => x.Quantity14);
                model.Quantity15= item.Sum(x => x.Quantity15);
                model.Quantity16 = item.Sum(x => x.Quantity16);
                model.Quantity17 = item.Sum(x => x.Quantity17);
                model.Quantity18 = item.Sum(x => x.Quantity18);
                model.Quantity19 = item.Sum(x => x.Quantity19);
                model.Quantity20 = item.Sum(x => x.Quantity20);
                model.Quantity21 = item.Sum(x => x.Quantity21);
                model.Quantity22 = item.Sum(x => x.Quantity22);
                model.Quantity23 = item.Sum(x => x.Quantity23);
                model.Quantity24 = item.Sum(x => x.Quantity24);
                model.Quantity25 = item.Sum(x => x.Quantity25);
                model.Quantity26 = item.Sum(x => x.Quantity26);
                model.Quantity27 = item.Sum(x => x.Quantity27);
                model.Quantity28 = item.Sum(x => x.Quantity28);
                model.Quantity29 = item.Sum(x => x.Quantity29);
                model.Quantity30 = item.Sum(x => x.Quantity30);
                model.IsActive = true;
                
                model.ProductId = item.Select(x => x.ProductId).FirstOrDefault();
                model.ProductStyleId = item.Select(x => x.ProductStyleId).FirstOrDefault();
                result.Add(model);
                bool create = ServerResponse.Invoke<bool>("api/stockInventory/create", JsonConvert.SerializeObject(model), "POST");
            }
            return list;
        }
        public List<ReceiveOrderModel> GetAllReceiptOrder(int? id)
        {
            var list = ServerResponse.Invoke<List<ReceiveOrderModel>>("api/receiptOrder/getDetails?Id="+id, "", "GET");

            return list;
        }
        public List<ReceiptOrderViewModel> SearchData(ReceiptSearch model)
        {
            var list = ServerResponse.Invoke<List<ReceiptOrderViewModel>>("api/receiptOrder/search" ,JsonConvert.SerializeObject(model), "POST");

            return list;
        }
        public bool Create(ReceiveOrderModel model)
        {
           return ServerResponse.Invoke<bool>("/api/receiptOrder/create", JsonConvert.SerializeObject(model), "POST");
           
        }
        public bool AddReceiptOrderItem(ReceiptOrderItemModel model)
        {
            return ServerResponse.Invoke<bool>("/api/receiptOrderItems/create", JsonConvert.SerializeObject(model), "Post");
        }
        public bool EditReceiptOrderItem(ReceiptOrderItemModel model)
        {
            return ServerResponse.Invoke<bool>("/api/receiptOrderItems/edit?id="+model.Id, JsonConvert.SerializeObject(model), "Post");
        }
        public bool AddReceiptOrder(int? ReceiptOrderId)
        {
            return ServerResponse.Invoke<bool>("/api/receiptOrder/AddReceiptOrder?ReceiptOrderId=" + ReceiptOrderId, "", "POST");
        }
        public bool EditReceiptOrder(int? Id)
        {
            return ServerResponse.Invoke<bool>("/api/receiptOrder/EditReceiptOrder?Id=" + Id, "", "POST");
        }
        public List<ReceiptOrderItemModel> GetByReceiptOrderId(int? Id)
        {
            var list = ServerResponse.Invoke<List<ReceiptOrderItemModel>>("/api/receiptOrderItems/getDetailByReceiptOrderId?ReceiptOrderId=" + Id, "", "GET");
            return list;
        }
        public ReceiveOrderModel GetById(int? Id)
        {
            var GetById = ServerResponse.Invoke<ReceiveOrderModel>("api/receiptOrder/getById?id=" + Id, "", "GET");
            return GetById;
        }
        public bool Delete(int? Id)
        {
            var ReceiptOrdervalue = ServerResponse.Invoke<bool>("/api/receiptOrder/delete?id=" +Id, "", "Post");
            // var ReceiptOrderItemById=
            return ReceiptOrdervalue;
        }
        public PurchaseOrderItemModel GetUpdateValues(int? Id,int? productId,int? ProductStyleId)
        {
            var data = ServerResponse.Invoke<List<ReceiptOrderItemModel>>("/api/receiptOrderItems/getDetailById?ProductId=" + productId+ "&&ProductStyleId="+ ProductStyleId, "", "GET");
            //var data2 = data.FirstOrDefault();
            var ID = data[0].ReceiveOrder.PurchaseOrder.Id;
            var productID = data[0].Product.Id;
            var purchaseOrderList = ServerResponse.Invoke<List<PurchaseOrderItemModel>>("api/PurchaseOrderItems/getDetails","","GET");
            var data1 = purchaseOrderList.Where(x => x.ProductId == productID && x.PurchaseOrderId == ID && x.ProductStyleId==ProductStyleId).FirstOrDefault();
            PurchaseOrderItemModel model = new PurchaseOrderItemModel();
            ReceiptOrderItemModel data2 = new ReceiptOrderItemModel();
           
            data2.Quantity01 = data.Sum(x => x.Quantity01);
            data2.Quantity02 = data.Sum(x => x.Quantity02);
            data2.Quantity03 = data.Sum(x => x.Quantity03);
            data2.Quantity04 = data.Sum(x => x.Quantity04);
            data2.Quantity05 = data.Sum(x => x.Quantity05);
            data2.Quantity06 = data.Sum(x => x.Quantity06);
            data2.Quantity07 = data.Sum(x => x.Quantity07);
            data2.Quantity08 = data.Sum(x => x.Quantity08);
            data2.Quantity09 = data.Sum(x => x.Quantity09);
            data2.Quantity10 = data.Sum(x => x.Quantity10);
            data2.Quantity11 = data.Sum(x => x.Quantity11);
            data2.Quantity12 = data.Sum(x => x.Quantity12);
            data2.Quantity13 = data.Sum(x => x.Quantity13);
            data2.Quantity14 = data.Sum(x => x.Quantity14);
            data2.Quantity15 = data.Sum(x => x.Quantity15);
            data2.Quantity16 = data.Sum(x => x.Quantity16);
            data2.Quantity17 = data.Sum(x => x.Quantity17);
            data2.Quantity18 = data.Sum(x => x.Quantity18);
            data2.Quantity19 = data.Sum(x => x.Quantity19);
            data2.Quantity20 = data.Sum(x => x.Quantity20);
            data2.Quantity21 = data.Sum(x => x.Quantity21);
            data2.Quantity22 = data.Sum(x => x.Quantity22);
            data2.Quantity23 = data.Sum(x => x.Quantity23);
            data2.Quantity24 = data.Sum(x => x.Quantity24);
            data2.Quantity25 = data.Sum(x => x.Quantity25);
            data2.Quantity26 = data.Sum(x => x.Quantity26);
            data2.Quantity27 = data.Sum(x => x.Quantity27);
            data2.Quantity28 = data.Sum(x => x.Quantity28);
            data2.Quantity29 = data.Sum(x => x.Quantity29);
            data2.Quantity30 = data.Sum(x => x.Quantity30);
            
            model.QuantitySize1 = data1.QuantitySize1 - data2.Quantity01;
            model.QuantitySize2 = data1.QuantitySize2 - data2.Quantity02;
            model.QuantitySize3 = data1.QuantitySize3 - data2.Quantity03;
            model.QuantitySize4 = data1.QuantitySize4 - data2.Quantity04;
            model.QuantitySize5 = data1.QuantitySize5 - data2.Quantity05;
            model.QuantitySize6 = data1.QuantitySize6 - data2.Quantity06;
            model.QuantitySize7 = data1.QuantitySize7 - data2.Quantity07;
            model.QuantitySize8 = data1.QuantitySize8 - data2.Quantity08;
            model.QuantitySize9 = data1.QuantitySize9 - data2.Quantity09;
            model.QuantitySize10 = data1.QuantitySize10 - data2.Quantity10;
            model.QuantitySize11 = data1.QuantitySize11 - data2.Quantity11;
            model.QuantitySize12 = data1.QuantitySize12 - data2.Quantity12;
            model.QuantitySize13 = data1.QuantitySize13 - data2.Quantity13;
            model.QuantitySize14 = data1.QuantitySize14 - data2.Quantity14;
            model.QuantitySize15 = data1.QuantitySize15 - data2.Quantity15;
            model.QuantitySize16 = data1.QuantitySize16 - data2.Quantity16;
            model.QuantitySize17 = data1.QuantitySize17 - data2.Quantity17;
            model.QuantitySize18 = data1.QuantitySize18 - data2.Quantity18;
            model.QuantitySize19 = data1.QuantitySize19 - data2.Quantity19;
            model.QuantitySize20 = data1.QuantitySize20 - data2.Quantity20;
            model.QuantitySize21 = data1.QuantitySize21 - data2.Quantity21;
            model.QuantitySize22 = data1.QuantitySize22 - data2.Quantity22;
            model.QuantitySize23 = data1.QuantitySize23 - data2.Quantity23;
            model.QuantitySize24 = data1.QuantitySize24 - data2.Quantity24;
            model.QuantitySize25 = data1.QuantitySize25 - data2.Quantity25;
            model.QuantitySize26 = data1.QuantitySize26 - data2.Quantity26;
            model.QuantitySize27 = data1.QuantitySize27 - data2.Quantity27;
            model.QuantitySize28 = data1.QuantitySize28 - data2.Quantity28;
            model.QuantitySize29 = data1.QuantitySize29 - data2.Quantity29;
            model.QuantitySize30 = data1.QuantitySize30 - data2.Quantity30;
            model.CostSize1 = data1.CostSize1;
            model.CostSize2 = data1.CostSize2;
            model.CostSize3 = data1.CostSize3;
            model.CostSize4 = data1.CostSize4;
            model.CostSize5 = data1.CostSize5;
            model.CostSize6 = data1.CostSize6;
            model.CostSize7 = data1.CostSize7;
            model.CostSize8 = data1.CostSize8;
            model.CostSize9 = data1.CostSize9;
            model.CostSize10 = data1.CostSize10;
            model.CostSize11= data1.CostSize11;
            model.CostSize12= data1.CostSize12;
            model.CostSize13= data1.CostSize13;
            model.CostSize14= data1.CostSize14;
            model.CostSize15= data1.CostSize15;
            model.CostSize16= data1.CostSize16;
            model.CostSize17= data1.CostSize17;
            model.CostSize18= data1.CostSize18;
            model.CostSize19= data1.CostSize19;
            model.CostSize20= data1.CostSize20;
            model.CostSize21= data1.CostSize21;
            model.CostSize22= data1.CostSize22;
            model.CostSize23= data1.CostSize23;
            model.CostSize24= data1.CostSize24;
            model.CostSize25= data1.CostSize25;
            model.CostSize26= data1.CostSize26;
            model.CostSize27= data1.CostSize27;
            model.CostSize28= data1.CostSize28;
            model.ProductSKU = data1.Product.ProductSKU;
            model.ProductStyleSKU = data1.ProductStyle.StyleSKU;
            return model;
        }


    }
}
