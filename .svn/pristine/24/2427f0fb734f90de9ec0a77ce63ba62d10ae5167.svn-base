@model Model.OffersModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<style>
    .multiselect {
        width: 200px;
    }

    .selectBox {
        position: relative;
    }

        .selectBox select {
            width: 100%;
            font-weight: bold;
        }

    #checkboxes {
        display: none;
        border: 1px #dadada solid;
    }

        #checkboxes label {
            display: block;
        }

            #checkboxes label:hover {
                background-color: #1e90ff;
            }
</style>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<div class="row">

    <div class="prtm-page-bar col-md-12 col-lg-12 col-sm-12 col-12" style="background:none;">
        <ul class="breadcrumb" style="background:none;">
            <li class="breadcrumb-item text-capitalize">
                <h3>Product Search</h3>
            </li>
            <li class="breadcrumb-item"><a href="#">Dashboard</a></li>
        </ul>
    </div>

    <div class="col-md-3">
        <div class="filter-content">

            <div class="filters-filt">
                <div class="box-style-filt">
                    <div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
                        <div class="panel panel-default">
                            <div class="panel-heading" role="tab" id="headingOne">
                                <h4 class="panel-title">
                                    <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        <i class="icon_set_1_icon-65"></i> Product Search
                                    </a>
                                </h4>
                            </div>
                            <div id="collapseOne" class="panel-collapse collapse show" role="tabpanel" aria-labelledby="headingOne">
                                <div class="row">
                                    <div class="col-md-12 col-lg-12 col-xg-12">
                                        <div class="filter_type">
                                            <h6>Price</h6>
                                            <input type="text" id="costPrice" name="range" value="">
                                        </div>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="col-md-12 col-lg-12 col-xg-12">
                                        <label class="" for="CountryId">Style Code</label>
                                        @Html.TextBoxFor(model => model.AutocompleteProductSKU, new { @class = "form-control" })
                                        <input id="autoCompleteProductStyleId" name="autoCompleteProductStyleId" type="hidden" />
                                        @Html.ValidationMessageFor(Model => Model.AutocompleteProductSKU)
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-xg-12">
                                        <label class="" for="CountryId">Season</label>
                                        @Html.TextBoxFor(model => model.AutocompleteSeason, new { @class = "form-control" })
                                        <input id="autoCompleteSeasonId" name="autoCompleteSeasonId" type="hidden" />
                                        @Html.ValidationMessageFor(Model => Model.AutocompleteSeason)
                                    </div>
                                    <div class="col-md-12 col-lg-12 col-xg-12 multiselect">
                                        <label class="" for="ColorID">Color</label>
                                        @Html.TextBoxFor(model => model.AutocompleteColorCode, new { @class = "form-control", onclick = "showCheckBoxes()" })
                                        @Html.ValidationMessageFor(Model => Model.AutocompleteColorCode)
                                        <ui id="checkboxes">
                                        </ui>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 col-lg-12 col-xg-12">
                                <button type="submit" onclick="searchData()" class="btn btn-success advance-serach-btn">Search</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="tbb-content col-md-9">
    </div>
    <div class="dvUserDetails">
        @{

            Html.RenderPartial("_Index", Model);
        }

    </div>
</div>
<style>
    .ui-widget-content.ui-autocomplete {
        z-index: 9999 !important;
    }
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
@section scripts{
    <script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
    <script type="text/javascript">
        var expanded = false;
        function showCheckBoxes() {

            var checkboxes = document.getElementById("checkboxes");
            if (!expanded) {
                checkboxes.style.display = "block";
                expanded = true;

            } else {
                checkboxes.style.display = "none";
                expanded = false;
            }
        }
        $(document).ready(function () {
            debugger
            var ColorList = {};
            $("#AutocompleteColorCode").autocomplete({
                source: function (request, response) {
                    debugger
                    $.ajax({
                        url: "/Admin/Offers/AutoCompleteColorList",
                        type: "GET",
                        data: { name: request.term },
                        success: function (result) {
                            debugger
                            ColorList = $.map(result, function (value, key) { return { value: value.Id, label: value.Code }; });
                            // response(ColorList);
                            var checkboxes = document.getElementById("checkboxes");
                            for (var i = 0; i < ColorList.length; i++) {

                                var node = document.createElement('div');
                                node.innerHTML = '<label id="' + ColorList[i].value + '"><input type="checkbox"  id="' + ColorList[i].value + '" onclick="SelectCheck(1)"/>' + ColorList[i].label + '</label>';
                                document.getElementById('checkboxes').appendChild(node);

                            }
                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {
                    event.preventDefault();
                    debugger
                    var value = $("[id*=AutocompleteColorCode]").val().split(/,\s*/);
                    value.pop();
                    if (value == ui.item.label) {
                        ui.item.disabled = true;
                    }

                    var text = this.value.split(/,\s*/);
                    text.pop();
                    text.push(ui.item.label);
                    text.push("");
                    this.value = text.join(", ");
                    //  if (index.length > 0) {
                    //    index.remove(index.length - 1);
                    //  }
                    var value = $("[id*=AutocompleteColorCode]").val().split(/,\s*/);
                    value.pop();

                    value.push(ui.item.label);
                    value.push("");

                    $("#[id*=AutocompleteColorCode]")[0].value = value.join(", ");
                    multiselect: true
                    return false;
                },
                minLength: 1
            });
        })

        function SelectCheck(id) {
            debugger;
            $("#AutocompleteColorCode").text("<span>Text</span>");
        }


        $(document).ready(function () {
            debugger
            var SizeList = {};
            $("#AutocompleteSize").autocomplete({
                source: function (request, response) {
                    debugger
                    $.ajax({
                        url: "/Admin/Offers/AutoCompleteSizeList",
                        type: "GET",
                        data: { name: request.term },
                        success: function (result) {
                            debugger
                            SizeList = $.map(result, function (value, key) {
                                return {
                                    value: value.Id, label: value.Z01,

                                };

                            });
                            response(SizeList);

                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {
                    event.preventDefault();
                    debugger
                    var value = $("[id*=AutocompleteSize]").val().split(/,\s*/);
                    value.pop();
                    if (value == ui.item.label) {
                        ui.item.disabled = true;

                    }

                    var text = this.value.split(/,\s*/);
                    text.pop();
                    text.push(ui.item.label);
                    text.push("");
                    this.value = text.join(", ");

                    var value = $("[id*=AutocompleteSize]").val().split(/,\s*/);
                    value.pop();

                    value.push(ui.item.label);
                    value.push("");

                    $("#[id*=AutocompleteSize]")[0].value = value.join(", ");

                    return false;
                },
                minLength: 1
            });
        })
        $(document).ready(function () {
            debugger
            var SeasonList = {};
            $("#AutocompleteSeason").autocomplete({
                source: function (request, response) {
                    debugger
                    $.ajax({
                        url: "/Admin/Offers/AutoCompleteSeasonList",
                        type: "GET",
                        data: { name: request.term },
                        success: function (result) {
                            debugger
                            SeasonList = $.map(result, function (value, key) { return { value: value.Id, label: value.Code }; });
                            response(SeasonList);

                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {
                    debugger
                    event.preventDefault();
                    $("#AutocompleteSeason").val(ui.item.label);
                    $("#autoCompleteSeasonId").val(ui.item.value);
                },
                minLength: 1
            });
        })
        $(document).ready(function () {
            var StyleSKUList = {};
            $("#AutocompleteProductSKU").autocomplete({
                source: function (request, response) {

                    $.ajax({
                        url: "/Admin/Offers/AutoCompleteStyleSKUList",
                        type: "GET",
                        data: { name: request.term },
                        success: function (result) {

                            StyleSKUList = $.map(result, function (value, key) { return { value: value.Id, label: value.StyleSKU }; });
                            response(StyleSKUList);

                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {

                    event.preventDefault();
                    $("#AutocompleteProductSKU").val(ui.item.label);
                    $("#autoCompleteProductStyleId").val(ui.item.value);
                },
                minLength: 1
            });
        })
        $(function () {
            $("#costPrice").ionRangeSlider({
                hide_min_max: true,
                keyboard: true,
                min: 30,
                max: 999,
                from: 30,
                to: 999,
                type: 'double',
                step: 1,
                prefix: "",
                grid: true
            });
        });
        function searchData() {
            debugger
            var obj = {};
            obj.AutocompleteSeason = $('#AutocompleteSeason').val();
            obj.AutocompleteProductSKU = $('#AutocompleteProductSKU').val();
            obj.AutocompleteColorCode = $('#AutocompleteColorCode').val();
            obj.AutocompleteSize = $('#AutocompleteSize').val();
            obj.MinPrice = parseFloat($(".irs-from").text());
            obj.MaxPrice = parseFloat($(".irs-to").text());
            obj.IsActive = true;
            $.ajax({
                url: '/Admin/Offers/_Index',
                type: 'POST',
                data: obj,
                success: function (result) {
                    $('.dvUserDetails').html(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }

            });
            return false;
        }


        $(document).on("click", "a[href^='/Admin/Offers/_Index?page']", function () {
            debugger
            var obj = {};
            obj.AutocompleteSeason = $('#AutocompleteSeason').val();
            obj.AutocompleteProductSKU = $('#AutocompleteProductSKU').val();
            obj.AutocompleteColorCode = $('#AutocompleteColorCode').val();
            obj.AutocompleteSize = $('#AutocompleteSize').val();
            obj.MinPrice = parseFloat($(".irs-from").text());
            obj.MaxPrice = parseFloat($(".irs-to").text());
            obj.IsActive = true;
            $.ajax({
                type: "GET",
                url: $(this).attr("href"),

                //data: obj,
                success: function (result) {
                    //  alert("sgdhs")
                    $('.dvUserDetails').html(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }

            });
            return false;
        });


    </script>
    <script src="~/Scripts/vendor/range/ion.rangeSlider.min.js"></script>
}
