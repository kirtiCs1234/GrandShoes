@model List<Model.AllProductDetailModel>
@{

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var data = ViewBag.processData as Dictionary<string, string>;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.8.1/css/bootstrap-select.css">
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.2/themes/smoothness/jquery-ui.css" />
<div class="row">
    <div class="col-sm-12 col-xs-12 top-menu-bg">
        <ul class="top-menu">
            <li><a><i onclick="MyFunctionMarkDown('1');" class="fa fa-user" aria-hidden="true"></i><br />View Orders</a></li>
            <li><a onclick="MyFunctionMarkDown('2');"><i class="fa fa-building" aria-hidden="true" data-toggle="modal" data-backdrop="static" data-target="#myModal"></i><br />View Receipts</a></li>
            <li><a onclick="MyFunctionMarkDown('3');"><i class="fa fa-building" aria-hidden="true" data-toggle="modal" data-backdrop="static" data-target="#myModal"></i><br />View Distribution</a></li>
            <li><a href="#"><i class="fa fa-bars" aria-hidden="true"></i><br />View All Sales</a></li>
            <li><a href="#"><i class="fa fa-user" aria-hidden="true"></i><br />View Weekely Sales</a></li>
            <li><a href="#"><i class="fa fa-building" aria-hidden="true"></i><br />View Branch Sales</a></li>
            <li><a onclick="MyFunctionMarkDown('4');"><i class="fa fa-building" aria-hidden="true"></i><br />View Stock</a></li>
            <li><a href="#"><i class="fa fa-bars" aria-hidden="true"></i><br />View Invoices</a></li>
            <li><a onclick="MyFunctionMarkDown('5');"><i class="fa fa-user" aria-hidden="true"></i><br />Mark Down</a></li>
            <li><a onclick="MyFunctionDiscount();"><i class="fa fa-building" aria-hidden="true"></i><br />Discount</a></li>
        </ul>
    </div>
</div>


<div class="row mrgn-b-xs">
    <div class="col-md-9 col-lg-9 col-sm-12 col-xs-12">
        <div class="row">
            <div class="col-md-6 col-xs-12">
                <div class="top-search-navbar-search smallsearch">
                    <input class="top-search-navbar-input col-md-8 col-lg-10 col-sm-8 col-xs-8 searchiFirstName" type="text" placeholder="Search Product SKU" name="Code" id="ProductSKU">

                    @*<input type="submit" value="Add" class="btn btn-success popup-savebtn" />*@

                    <button class="advance-search col-md-2 col-lg-1 col-sm-2 col-xs-2" type="button"></button>

                    <button class="top-search-navbar-button col-md-2 col-lg-1 col-sm-2 col-xs-2" onclick="searchData()">
                        <i class="fa fa-search" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-6 col-xs-12">
                <div class="top-search-navbar-search smallsearch">
                    <input class="top-search-navbar-input col-md-8 col-lg-10 col-sm-8 col-xs-8 searchiFirstName" type="text" placeholder="Search Product Style SKU" name="Code" id="StyleSKU">

                    <button class="advance-search col-md-2 col-lg-1 col-sm-2 col-xs-2" type="button"></button>

                    <button class="top-search-navbar-button col-md-2 col-lg-1 col-sm-2 col-xs-2" onclick="searchData()">
                        <i class="fa fa-search" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
        </div>

    </div>
    <div class="add-btn-div col-md-4 col-lg-3 col-sm-4 col-12 text-right">

        <button type="button" class="btn btn-primary import-btn" onclick="FreeGift();">FreeGift</button>&nbsp;&nbsp;
        <button type="button" class="btn btn-primary import-btn" onclick="Import()" data-toggle="modal" data-target="#myModal" data-backdrop="static" data-keyboard="false">Import</button>&nbsp;&nbsp;
        <a href="@Url.Action("ExportList")">
            <button type="button" class="btn btn-primary import-btn">Export</button>&nbsp;&nbsp;
        </a>
    </div>
</div>
<div class="row">
    <div class="col-md-12 col-lg-12 col-sm-12 col-12 text-right ">
        <a class="btn btn-outline-inverse" href="~/File/ProductLat.csv"><i class="fa fa-arrow-circle-down" aria-hidden="true"></i> Product.csv</a>
    </div>
</div>
<div class="row" style="margin-top:5px;">

    <div class="dvUserDetails" id="">
        @{

            Html.RenderPartial("_Index", Model);
        }
        <div id="dvCreatedetails1">

        </div>
    </div>
    @*<div id="dvCreatedetails1">
        </div>*@
</div>


<div class="row marg-btn-20">
    <div class="partial-render">
        @Html.Action("Create")
    </div>

    <div id="dvCreatedetails">

    </div>
</div>
<div class="modal fade" id="myModal">
    <div id="dvImportFile">
    </div>

</div>
<div class="modal fade" id="myModalBarcode">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Barcode Template</h4>
            </div>
            <div class="row" id="modaldiv1" style="margin:0px;">
            </div>
            <div class="modal-footer">
                <button type="button" data-dismiss="modal" aria-hidden="true" id="btncancel"
                        class="btn btn-outline-inverse cancel">
                    Close
                </button>

            </div>
        </div>
    </div>
</div>
<div>
    <table>
        <thead>
            <tr>
                <td>Sr No.</td>
                <td>ProductSKU</td>
                <td>StyleSKU</td>
                <td>Message</td>
            </tr>
        </thead>
        <tbody>
            @if (data != null)
            {
                foreach (var item in data)
                {
                    var processData = item.Key.Split('#');
                    <tr>
                        <td>@processData[0]</td>
                        <td>@processData[1]</td>
                        <td>@processData[2]</td>
                        <td>@item.Value</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@section scripts{
    <script type="text/javascript">
        var dData = [];
        async function GetSizeGrid(SizeGridID) {

            debugger;
            dData = [];
            var selectedText = SizeGridID.options[SizeGridID.selectedIndex].innerHTML;
            var selectedValue = SizeGridID.value;
            if (selectedValue == null || selectedValue == "")
                selectedValue = 0;
            _GetSizeGrid(selectedValue);
        }

        async function _GetSizeGrid(selectedValue) {
            var sizeData = await getGridSizeValue(selectedValue);

            var show = await ShowSizeGrid(sizeData);

            $('.size-grid-temp').val(show);

            $('.size-grid-temp').autocomplete({

                source: function (request, response) {
                    debugger

                    var GridSizeList = $('.size-grid-temp').val().split(",");
                    GridSizeList.pop();
                    var term = request.term.split(",");
                    var len = term.length;
                    var key = term[len - 1];
                    var filterList = GridSizeList.filter(function (str) {
                        return str.includes(key);
                    });
                    response($.map(filterList, function (item) {
                        //return item;
                        return {
                            label: item,
                            val: item
                        }
                    }));
                },
                select: function (e, i) {
                    debugger
                    var text = this.value.split(/,\s*/);
                    text.pop();
                    text.push(i.item.value);
                    text.push("");
                    this.value = text.join(", ");
                    var value = $("[id*=SizeGridID]").val().split(/,\s*/);
                    value.pop();
                    value.push(i.item.val);
                    value.push("");
                    $("#[id*=SizeGridID]")[0].value = value.join(", ");
                    return false;
                },
                minLength: 1,
                scroll: true
            }).focus(function () {
                $(this).autocomplete("search", "");
            });
        }

        async function getGridSizeValue(id) {
            return await $.ajax({
                url: '/Admin/Product/pListGrid?id=' + id,
                type: "GET",
            });
        }

        async function ShowSizeGrid(data) {
            var i = 0;
            var check = data.length / 2
            var str = "";
            for (i = 0; i < check; i++) {
                str += data[i].Value + ",";
                dData.push(data[check + i]);
            }
            return await str;
        }
        function Cancel() {
            window.location = '/Admin/Product/Index';
        }
        
        
        
        function barcode() {
            JsBarcode("#barcode", "hyy", {
                width: 2,
                height: 30,
                length: 100
            });

        }
        function ShowBarcode(templateId, productId) {
            debugger
            //alert(templateId)
            $('#modaldiv1').html('');
            debugger;
            if (templateId != 0) {
                var str = "";
                $.ajax({
                    type: "GET",
                    dataType: "html",
                    url: '/Admin/Product/ShowTemplate?TemplateId=' + templateId + '&ProductId=' + productId,
                    //data: obj,
                    success: function (result) {
                        debugger;
                        //$('#barcode-temp').html(result);
                        $('#modaldiv1').html(result);

                    },
                    error: function (xhr, status) {
                        alert(status);
                    }
                });
            }
            else {
                ///alert("Please choose Template Design");
                $('#modaldiv1').html("<h4>Please choose Barcode Template Design</h4>");
            }
        }

        function GenerateStyleSKU() {
            debugger

            var productSKU = $("#SKU").val();
            $.ajax({
                type: "Get",
                url: "/Admin/Product/GenerateStyle/" + productSKU,
                success: function (result) {
                    debugger
                    $("#Style").val(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }
            });

        }
        function DisableFreeGift() {
            debugger
            var isAllow = $("#IsAllowZero").val();
            if (isAllow == "false") {
                $("#IsFreeGift").removeAttr("disabled");
            } else if (isAllow == "true") {
                $("#IsFreeGift").prop("disabled", true);
            }
        }
        function ProductValidation() {
            debugger;
            var productSKU = $("#SKU").val();
            var styleSKU = $("#Style").val();
            var valid = productSKU + styleSKU;
            $.ajax({
                type: "Get",
                url: "/Admin/Product/Validation/" + valid,
                success: function (result) {
                    debugger
                    if (result) {
                        alert("ProductSKU+StyleSKU product is already exist.")
                        // $("#Style").val("");
                        GenerateStyleSKU();
                    }

                },
                error: function (xhr, status) {
                    alert(status)
                }
            });

        }


        function searchData() {
            debugger
            var obj = {};
            obj.ProductSKU = $("#ProductSKU").val();
            obj.StyleSKU = $("#StyleSKU").val();
            obj.IsActive = true;
            $.ajax({
                type: 'POST',
                url: '/Admin/Product/_Index',

                contentType: "application/json; charset=utf-8",
                // dataType: "json",
                data: JSON.stringify(obj),
                success: function (result) {
                    $('.dvUserDetails').html(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }
            });

        }
        var id1;
        function create() {

            Data(0);
        }

        function edit(edit) {
            id1 = edit;
            Data(1);
        }

        function details(details) {
            id1 = details;
            Data(2);
        }

        function TreeView(ctrl) {
            var product = $(ctrl).val();
            id1 = product;
            Data(4);
        }

        function Export() {
            Data(6);
        }
        function getId(ctrl, id) {
            debugger;
            $('.product-index').css('background', '');

            if (ctrl.style.background == "" || ctrl.style == "white") {

                $('.product-index-' + id).css('background', '#F5E1B6');
                //  alert("jf")
            }
            else {
                $('.product-index-' + id).css('background', 'white');
                clicked = true;
            }

            //
            var id2 = ctrl;
            id1 = id2.children[0].children[0].value;
            var img = ctrl.children[3];
            var src1 = img.children[0].attributes.src.value;

            document.getElementById("show").src = src1;
        }
        function getId1(data) {
            debugger;
            var id2 = data;
            id1 = id2.children[0].children[0].value;
            var img = data.children[3];
            var src1 = img.children[0].attributes.src.value;

            document.getElementById("show").src = src1;
        }
        function Data(ch) {
            debugger;
            $(".partial-render").remove();
            var crud = "";
            switch (ch) {
                case 0:
                    crud = '/Admin/Product/Create';
                    break;
                case 1:
                    crud = '/Admin/Product/Edit/' + id1;
                    break;
                case 2:
                    crud = '/Admin/Product/Details/' + id1;
                    break;

                case 4:
                    crud = '/Admin/TreeView/Index/' + id1;
                    break;

                case 6:
                    crud = '/Admin/Product/ExportList'
                    break;
            }
            $.ajax({

                url: crud,
                contentType: 'application/html; charse=utf-8',
                type: 'GET',
                data: {
                    ProductId: id1
                },
                dataType: 'html',
                success: function (result) {
                    $('#dvCreatedetails').html(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }
            });
        }
        $(document).ready(function () {
            debugger
            var str = $(location).attr("href");
            var n = str.indexOf("Index") + 6;
            if (n > str.length) {

            }
            else {
                var itemId = str.substring(n, str.length);
                details(itemId);
            }
        });
        $(function () {
            debugger
            $('.multiselect-ui').multiselect({
                includeSelectAllOption: true
            });
        });
        function FreeGift() {
            debugger;
            $.ajax({
                url: '/Admin/Product/_Index1',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    $('#dvCreatedetails1').html(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }
            })
        }
        function Import() {
            debugger;
            $.ajax({
                url: '/Admin/Product/ExcelUpload',
                type: 'GET',
                dataType: 'html',
                success: function (result) {
                    $('#dvImportFile').html(result);
                },
                error: function (xhr, status) {
                    alert(status)
                }
            })
        }
        function RefreshField() {
            debugger;
            $("#ProductSKU").val('');
            $("#AutocompleteProductStyleSKU").val('');
            $("#date").val('');
            $("#date1").val('');
            $("#SeasonData").val('');
            $("#BuyerData").val('');
            $("#AutocompleteSupplierCode").val('');
            $("#LongDescription").val('');
            $("#ShortDescription").val('');
            $("#SizeGridData").val('');
            $("#AvailableSizes").val('');
            $("#ProductCategoryData").val('');
            $("#ProductGroupData").val('');
            $("#ProductSourceData").val('');
            $("#RecommendedSellingPrices").val('');
            $("#CostPrices").val('');
            $("#ActualSellingPrices").val('');
            $("#OriginalPrice").val('');
            $("#InternationalCost").val('');
            $("#ColorData").val('');
            $("#SupplierCode").val('');
            $("#SupplierName").val('');
            $("#IsConsignment").val('');
            $("#IsAllowZero").val('');
            $("#IsFreeGift").val('');
            $("#MarkDownData").val('');
            $("#Template").val('');
            $("#Primary").val('');
            $("#file").val('');
            $("#file1").val('');
            $("#file2").val('');
            $("#file3").val('');
            $("#file4").val('');
        }
        function del(id) {
            debugger;
            var id2 = $('#')
            var ans = confirm("Are you sure you want to delete this Record?");
            if (ans) {
                $.ajax({
                    url: "/Admin/Product/Delete/" + id,
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    //   dataType: "json",
                    success: function (result) {
                        debugger;
                        // alert("succccc");
                        window.location.href = window.location.pathname
                        // showReceipt(item.Id);

                    },
                    error: function (errormessage) {
                        alert(errormessage.responseText);
                    }
                });
            }
            return false;
        }
        function MyFunction() {
            debugger;
            if (id1 != null) {
                $.ajax({
                    url: '/Admin/Product/TreeView/' + id1,
                    type: 'GET',
                    dataType: 'html',
                    success: function (result) {
                        $('#dvImportFile').html(result);
                    },
                    error: function (xhr, status) {
                        alert(status)
                    }
                });
            }
            else {
                alert("Please select any one row.");
            }
        }

        function MyFunctionMarkDown(value) {
            debugger;

            if (id1 != null) {
                var crud = "";
                if (value == '1') {
                    // alert("jghg");
                    crud = "/Admin/Product/ViewPurchaseOrder/" + id1;
                }
                if (value == '2') {
                    // alert("jghg");
                    crud = "/Admin/Product/ViewReceiptOrder/" + id1;
                }
                if (value == '3') {
                    // alert("jghg");
                    crud = "/Admin/Product/ViewDistribution/" + id1;
                }
                if (value == '4') {
                    // alert("jghg");
                    crud = "/Admin/Product/ViewStock/" + id1;
                }
                if (value == '5') {
                    // alert("jghg");
                    crud = "/Admin/MarkDownBranch/Index?id=" + id1;;
                }
                window.location.href = crud;

            }
            else {
                alert("Please select any one row.");
            }
        }

        function ViewReceipt() {
            debugger;
            if (id1 != null) {

                debugger;
                $.ajax({
                    url: '/Admin/Product/ViewReceiptByProduct/' + id1,
                    type: 'GET',
                    dataType: 'html',
                    success: function (result) {
                        $('#dvImportFile').html(result);
                    },
                    error: function (xhr, status) {
                        alert(status)
                    }
                });
            }
            else {
                alert("Please select any one row.");
            }
        }


        $(document).ready(function () {
            debugger
            var StyleLists = {};
            $("#AutocompleteProductStyleSKU").autocomplete({

                source: function (request, response) {
                    debugger
                    $.ajax({
                        url: "/admin/Product/AutoCompleteStyleSKUList",
                        type: 'GET',
                        data: { name: request.term },
                        success: function (result) {
                            debugger
                            StyleLists = $.map(result, function (value, key) { return { value: value.Id, label: value.StyleSKU }; });
                            response(StyleLists);
                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {
                    debugger
                    event.preventDefault();
                    $("#AutocompleteProductStyleSKU").val(ui.item.label);
                    $("#autoCompleteProductStyleId").val(ui.item.value);
                },
                minLength: 1
            });
        })

        $(document).ready(function () {
            debugger
            var a = $('#SizeGridID').val();
            $('#AvailableSize1111').autocomplete({
                source: function (request, response) {
                    debugger
                    $.ajax({
                        url: '/Admin/Product/getGridSize/' + selectedValue,
                        type: "GET",
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",

                        success: function (data) {
                            response($.map(data, function (item) {
                                //return item;
                                return {
                                    label: item.split('-')[0],
                                    val: item.split('-')[1]
                                }
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    debugger
                    var text = this.value.split(/,\s*/);
                    text.pop();
                    text.push(i.item.value);
                    text.push("");
                    this.value = text.join(", ");
                    var value = $("[id*=SizeGridID]").val().split(/,\s*/);
                    value.pop();
                    value.push(i.item.val);
                    value.push("");
                    $("#[id*=SizeGridID]")[0].value = value.join(", ");
                    return false;
                },
                minLength: 1,
                scroll: true
            }).focus(function () {
                $(this).autocomplete("search", "");
            });
        });
        function show(input) {
            debugger;
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    debugger;
                    $('.create-user-image').attr('src', e.target.result);

                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }
        function show1(input1) {
            debugger;
            if (input1.files && input1.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    debugger;
                    $('.create-user-image1').attr('src', e.target.result);

                }
                filerdr.readAsDataURL(input1.files[0]);
            }
        }
        function show2(input2) {
            debugger;
            if (input2.files && input2.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    debugger;
                    $('.create-user-image2').attr('src', e.target.result);

                }
                filerdr.readAsDataURL(input2.files[0]);
            }
        }
        function show3(input3) {
            debugger;
            if (input3.files && input3.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    debugger;
                    $('.create-user-image3').attr('src', e.target.result);

                }
                filerdr.readAsDataURL(input3.files[0]);
            }
        }
        function show4(input4) {
            debugger;
            if (input4.files && input4.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    debugger;
                    $('.create-user-image4').attr('src', e.target.result);

                }
                filerdr.readAsDataURL(input4.files[0]);
            }
        }

        function GetSupplier(SupplierID) {
            debugger;
            var selectedText = SupplierID.options[SupplierID.selectedIndex].innerHTML;
            var selectedValue = SupplierID.value;
            if (selectedValue == null || selectedValue == "")
                selectedValue = 0;
            $.ajax({

                url: '/Admin/Product/getSupplierName/' + selectedValue,
                contentType: 'application/html; charse=utf-8',
                type: 'GET',
                // data: {page : page} ,
                dataType: 'html',
                success: function (result) {
                    $('.createName').html(result);
                    ValidationCheck();
                },
                error: function (xhr, status) {
                    alert(status)
                }
            });
        }

        $('.product-index').click(function () {
            debugger;
            $('.product-index').css('background', '');

            if (this.style.background == "" || this.style.background == "white") {

                $(this).css('background', '#F5E1B6');

            }
            else {
                $(this).css('background', 'white');
                clicked = true;
            }

        });
        $(document).ready(function () {
            var date = new Date();
            var currentMonth = date.getMonth();
            var currentDate = date.getDate();
            var currentYear = date.getFullYear();

            $('#date').datepicker({
                minDate: new Date(currentYear, currentMonth, currentDate),
                dateFormat: 'yy/mm/dd'
            });
        });
        $(document).ready(function () {
            var date = new Date();
            var currentMonth = date.getMonth();
            var currentDate = date.getDate();
            var currentYear = date.getFullYear();

            $('#date1').datepicker({
                minDate: new Date(currentYear, currentMonth, currentDate),
                dateFormat: 'yy/mm/dd'
            });
        });
        function showReceipt(id) {
            debugger
            //  alert(id);
            $("#ReceiptDetail-" + id).html('<tr><td colspan = "5" style="background-color:white;"><img src="/Image/bars.gif" style="width:55px; height:47px;margin-left:40%; z-index:200" /></td></tr>');

            $.ajax(
                {
                    url: '/Admin/Product/GetReceiptById/' + id,
                    type: "GET",
                    success: function (result) {
                        debugger
                        $("#ReceiptDetail-" + id).html(result);
                        // alert("dgfhdf");
                    },
                    error: function (xhr, status) {
                        alert(status)
                    }
                });
        }
        function GetCategory(ProdCatID) {
            debugger;
            var selectedText = ProdCatID.options[ProductCategoryID.selectedIndex].innerHTML;
            var selectedValue = ProdCatID.value;
            if (selectedValue == null || selectedValue == "")
                selectedValue = 0;
            $.ajax({
                url: '/Admin/Product/getCategoryName/' + selectedValue,
                type: 'GET',
                success: function (result) {
                    debugger
                    $('#Category1').val(result.Category1);
                    $('#Category2').val(result.Category2);
                    $('#Category3').val(result.Category3);
                    $('#Category4').val(result.Category4);
                },
                error: function (xhr, status) {
                    alert(status)
                }
            });
        }
        function ValidationCheck() {
            debugger
            var obj = {};
            obj.SupplierStyle = $("#SupplierStyle").val();
            obj.ColorID = $("#ColorID").val();
            obj.SupplierID = $("#SupplierID").val();
            if ($("#SupplierStyle").val() != "" && $("#ColorID").val() != "" && $("#SupplierID").val() != "") {
                $.ajax({
                    url: '/Admin/Default/ValidationCheck',
                    type: 'POST',
                    data: obj,
                    success: function (result) {
                        // $('.dvUserDetails').html(result);
                        if (result) {
                            alert("Supplier style, supplier code and color is already used.")
                            $("#SupplierStyle").val("");
                            $("#ColorID").val("");
                            $("#SupplierID").val("");
                        }
                    },
                    error: function (xhr, status) {
                        alert(status)
                    }

                });
            }
        }
    </script>

}

