@model Model.ProductModel
@{
    ViewBag.Title = "Details";
    Layout = null;
    var seList = ViewData["dropDownData"] as Dictionary<string, SelectList>;

}
<div class="row marg-btn-20">
    <div class="col-sm-12 col-md-12 col-xs-12">
        @using (Html.BeginForm("Details", "Product", FormMethod.Post, new { id = "viewForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

        <div class="forms">
            <div class="row marg-btn-20">
                <div class="col-sm-12">
                    <div class="row marg-btn-20">
                        <div class="col-md-2 col-sm-3 col-xs-12"><label>Product/ Style</label></div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.EditorFor(model => model.ProductSKU, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProductSKU, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2 col-sm-3 col-xs-12">
                            @Html.EditorFor(model => model.StyleSKU, new { htmlAttributes = new { @class = "form-control", @id = "autoComplete" } })
                            @Html.ValidationMessageFor(model => model.StyleSKU, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2 col-sm-3 col-xs-12 barcode">
                            <svg id="barcode"></svg>
                        </div>
                    </div>

                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Date</label></div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">Last M/Down</div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.EditorFor(model => model.UpdatedOn, new { htmlAttributes = new { @class = "form-control", @Value = @TempData["Date"] } })
                    @Html.ValidationMessageFor(model => model.UpdatedOn, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1 col-sm-2 col-xs-12">M/D Seq</div>
                <div class="col-md-3 col-sm-2 col-xs-12"><input class="form-control" type="text" value="@TempData["Number"]" /></div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Season</label></div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.SeasonID, seList["SeasonID"], "-Description-", htmlAttributes: new
               {
                   @class = "form-control"
               })
                    @Html.ValidationMessageFor(model => model.SeasonID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">Buyer</div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.BuyerID, seList["BuyerID"], "-Buyer-", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BuyerID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1 col-sm-2 col-xs-12">Sup. Style</div>
                <div class="col-md-3 col-sm-2 col-xs-12">
                    @Html.EditorFor(model => model.SupplierStyle, new { htmlAttributes = new { @class = "form-control", placeholder = "Supplier Style" } })
                    @Html.ValidationMessageFor(model => model.SupplierStyle, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Description</label></div>
                <div class="col-md-10 col-sm-10 col-xs-12">
                    @Html.EditorFor(model => model.LongDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Label Desc</label></div>
                <div class="col-md-4 col-sm-3 col-xs-12">
                    @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1 col-sm-2 col-xs-12"><label>Size Grid</label></div>
                <div class="col-md-1 col-sm-1 col-xs-12">
                    @Html.DropDownListFor(m => m.SizeGridID, seList["SizeGridID"], "--SizeGrid--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SizeGrid.GridNumber, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <div class="create">
                        @Html.EditorFor(model => model.AvailableSize, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AvailableSize, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Prod. Cat.</label></div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.ProdCat1ID, seList["ProdCat1ID"], "--Prod Cat1--", htmlAttributes: new { @class = "form-control", onchange = "GetCategory(this)" })
                    @Html.ValidationMessageFor(model => model.ProdCat1ID, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.ProdCat2ID, seList["ProdCat2ID"], "--Prod Cat2--", htmlAttributes: new { @class = "form-control", onchange = "GetCategory(this)" })
                    @Html.ValidationMessageFor(model => model.ProdCat2ID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.ProdCat3ID, seList["ProdCat3ID"], "--Prod Cat3--", htmlAttributes: new { @class = "form-control", onchange = "GetCategory(this)" })
                    @Html.ValidationMessageFor(model => model.ProductCategoryID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.ProdCat4ID, seList["ProdCat4ID"], "--Prod Cat4--", htmlAttributes: new { @class = "form-control", onchange = "GetCategory(this)" })
                    @Html.ValidationMessageFor(model => model.ProdCat4ID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-3 col-xs-12"><label>Recommended Selling Price</label></div>
                <div class="col-md-2 col-sm-3 col-xs-12">
                    @Html.EditorFor(model => model.RecommendedSellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RecommendedSellingPrice, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-3 col-xs-12"><label>Cost Price</label></div>
                <div class="col-md-2 col-sm-3 col-xs-12">
                    @Html.EditorFor(model => model.CostPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostPrice, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-1 col-sm-3 col-xs-12" style="padding-right:0px;"><label>Actual Selling Price</label></div>
                <div class="col-md-3 col-sm-3 col-xs-12">
                    @Html.EditorFor(model => model.ActualSellingPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ActualSellingPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-3 col-xs-12"><label>International Cost</label></div>
                <div class="col-md-2 col-sm-3 col-xs-12">
                    @Html.EditorFor(model => model.CostPriceUSD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CostPriceUSD, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-3 col-xs-12"><label>VPI</label></div>
                <div class="col-md-2 col-sm-1 col-xs-12">
                    @Html.EditorFor(model => model.IsVPI, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsVPI, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-1 col-sm-3 col-xs-12"><label for="line-wrap-example">Color</label></div>
                @*<div class="form-group multi-select-full col-md-2 col-sm-3 col-xs-12">

            @Html.DropDownList("Colors", new MultiSelectList(ViewBag.ColorID, "Id", "Code", ViewBag.slectedItems), new { @id = "dates-field2", @class = "multiselect-ui form-control chzn-select", multiple = "multiple" })*@
                <div class="col-md-3 col-sm-2 col-xs-12">
                    @Html.DropDownListFor(m => m.ColorID, seList["ColorID"], "--Color--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
                </div>
                @*<div class="col-md-1 col-sm-3 col-xs-12"><button class="btn btn-primary form-control" type="button">Edit</button></div>*@

            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Supp. Code</label></div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.DropDownListFor(m => m.SupplierID, seList["SupplierID"], "--Supplier--", htmlAttributes: new { @class = "form-control", onchange = "GetSupplier(this);" })
                    @Html.ValidationMessageFor(model => model.SupplierID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <div class="createName">
                        @Html.EditorFor(model => model.SupplierName, new { htmlAttributes = new { @class = "form-control", placeholder = "Supplier Name" } })
                        @Html.ValidationMessageFor(model => model.SupplierName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2 col-sm-3 col-xs-12"><label>Product Source</label></div>
                <div class="col-md-2 col-sm-3 col-xs-12">
                    @Html.DropDownListFor(m => m.ProductSourceID, seList["ProductSourceID"], "-Product Source-", htmlAttributes: new
               {
                   @class = "form-control"
               })
                    @Html.ValidationMessageFor(model => model.ProductSourceID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Allow Zero Value</label></div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.EditorFor(model => model.IsAllowZero, new { htmlAttributes = new { @class = "form-control", onchange = "DisableFreeGift()" } })
                    @Html.ValidationMessageFor(model => model.IsAllowZero, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Free Gift</label></div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.DropDownListFor(m => m.IsFreeGift, seList["IsFreeGift"], "--FreeGift--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IsFreeGift, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row marg-btn-20">
                <div class="col-md-2 col-sm-2 col-xs-12"><label>Def. Template</label></div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.DropDownListFor(m => m.DefaultTemplateID, seList["DefaultTemplateID"], "--DefaultTemplate--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DefaultTemplateID, "", new { @class = "text-danger" })

                </div>
                <div class="col-md-2 col-sm-2 col-xs-12"><label>M/D Template</label></div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    @Html.DropDownListFor(m => m.MarkDownTemplateID, seList["MarkDownTemplateID"], "--MarkDownTemplate--", htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.MarkDownTemplateID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row marg-btn-20 file-img">
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <label>Primary Image</label>
                    <div>
                        @if (Model.PrimaryImage != null)
                        {
                            <img id="user_img" src="/Image/product/@Model.PrimaryImage" class="create-user-image" height="100" width="90" style="border:thin; margin-left:20px" />
                        }
                        else
                        {
                            <img id="user_img" src="/Image/product/no-Image.jpg" class="create-user-image" height="100" width="90" style="border:thin;" />
                        }
                    </div>

                </div>
                <div id="value" style="display:none">@ViewBag.Barcode</div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <label>Image1</label><div>
                        @if (Model.Image1 != null)
                        {
                            <img id="user_img1" src="/Image/product/@Model.Image1" class="create-user-image1" height="100" width="90" style="border:thin;" />
                        }
                        else
                        {
                            <img id="user_img1" src="/Image/product/no-Image.jpg" class="create-user-image1" height="100" width="90" style="border:thin;" />
                        }
                    </div>
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <label>Image2</label><div>
                        @if (Model.Image2 != null)
                        {
                            <img id="user_img2" src="/Image/product/@Model.Image2" class="create-user-image2" height="100" width="90" style="border:thin;" />
                        }
                        else
                        {
                            <img id="user_img2" src="/Image/product/no-Image.jpg" class="create-user-image2" height="100" width="90" style="border:thin;" />
                        }
                    </div>
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <label>Image3</label><div>
                        @if (Model.Image3 != null)
                        {
                            <img id="user_img3" src="/Image/product/@Model.Image3" class="create-user-image3" height="100" width="90" style="border:thin;" />
                        }
                        else
                        {
                            <img id="user_img3" src="/Image/product/no-Image.jpg" class="create-user-image3" height="100" width="90" style="border:thin;" />
                        }
                    </div>
                </div>
                <div class="col-md-2 col-sm-2 col-xs-12">
                    <label>Image4</label><div>
                        @if (Model.Image4 != null)
                        {
                            <img id="user_img4" src="/Image/product/@Model.Image4" class="create-user-image4" height="100" width="90" style="border:thin;" />
                        }
                        else
                        {
                            <img id="user_img4" src="/Image/product/no-Image.jpg" class="create-user-image4" height="100" width="90" style="border:thin;" />
                        }
                    </div>
                </div>

            </div>

        </div>

        }
    </div>
</div>
<script src="https://cdn.jsdelivr.net/jsbarcode/3.6.0/JsBarcode.all.min.js"></script>
<script type="text/javascript">
    JsBarcode("#barcode", "@ViewBag.Barcode", {

    width: 2,
    height: 30,
    length:100});
    $("#viewForm").find("input").attr("disabled", true);
    $("#viewForm").find("select").attr("disabled", true);
    $("#viewForm").find("textArea").attr("disabled", true);
    $("#viewForm").find(".popup-savebtn").hide();

</script>

