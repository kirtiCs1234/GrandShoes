@model Model.MarkDownAddModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<style>
    .radio-container {
        box-sizing: border-box;
        font-family: ‘Open Sans’, sans-serif;
        font-size: 13px;
        line-height: 30px;
        margin: 0;
        outline: 0;
        overflow: hidden;
        padding: 0;
    }

        .radio-container input {
            box-sizing: border-box;
            margin: 0;
            outline: 0;
            padding: 0;
            position: relative;
            top: 9px;
            vertical-align: top;
        }
</style>

<div class="table-style">
    <div class="prtm-full-block pos-relative">
    </div>
</div>
<div class="table-style">
    <div class="prtm-full-block pos-relative col-md-4 padding-section">

        <div class="prtm-block-title pad-all-md ">
            <div class="pos-relative">
                <div class="caption">
                    <h3 class="text-capitalize">Mark Down</h3>
                </div>
            </div>
        </div>

        <div class="prtm-block-content mrgn-b-md ">
            <div class="table-responsive" style="height:299px;">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Branch</th>
                            <th>Store</th>
                            <th>Transit</th>
                        </tr>
                    </thead>
                    <tbody class="tbodyIndex">

                        @foreach (var item in Model.BranchList1)
                        {
                            <tr class="dataRow">
                                <td>
                                    <input type="checkbox" name="selectedBranch" class="branches" value="@item.Id">
                                    @Html.DisplayFor(modelItem => item.BranchCode)
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.StoreSize)</td>
                                <td>@Html.DisplayFor(modelItem => item.StoreSize)</td>
                            </tr>
                        }
                    </tbody>

                </table>

            </div>


        </div>
        <div class="modal-footer">
            <button type="button" id="select-all" class="btn btn-outline-inverse cancel">All</button>
            <button type="button" id="select-none" class="btn btn-outline-inverse cancel">None</button>
        </div>
    </div>
    <div class="prtm-full-block pos-relative col-md-8 branch-right-section">
        <div class="partial-render">
            @Html.Action("Create")
        </div>

    </div>
</div>
<div class="dvCartonDetails" style="width:100%;float:left;">
    @Html.Action("Detail")
</div>



@section scripts{
<script src="~/Content/jsTree/Moment.js"></script>
    <script src="//code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
    <script type="text/javascript">

        function Clear(){
            debugger;
            var id1= $('#ProductID').val();
            if(id1!=""){
                window.location="/Admin/MarkDownBranch/Index/?id="+id1;
            }

        }
        function addZero(v) {
			debugger
        	if (v < 10) return '0' + v;
        	return v;
        }
        function getProductValues() {
            debugger;
            var obj = {};
            obj.ProductSKU = $("#AutocompleteProductSKU").val(),
                obj.StyleSKU = $("#AutocompleteProductStyleSKU").val(),
              $.ajax({
                  url: '/Admin/MarkDownBranch/GetProductValues',
                  type: 'POST',
                  data: obj,
                  success: function (result) {
                  	debugger;
                  	var str = result.ActualSellingPrice;
                  	str = str.substring(0, str.length-2)
                      if (result.PreDate != null) {
                          var date1 = result.PreDate;
                          var d = new Date(date1),
	   y = d.getFullYear(),
	   m = addZero(d.getMonth() + 1),
	   d = addZero(d.getDate());
                         var date= y + '-' + m+ '-' + d;
                      }
                      else {
                          var date = "none";
                      }
                      var today = new Date();
                      var dd = String(today.getDate()).padStart(2, '0');
                      var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
                      var yyyy = today.getFullYear();

                      today = yyyy + '-' + mm + '-' + dd;
                      $('#TodayDate').val(today);
                      $('#LastMarkDown').val(date);
                      $('#NoMarkDown').val(result.CountMarkDown);
                      $("#OriginalSellingPrice").val(str);
                      $("#NewCashPrice").val(result.NewCashPrice);
                  },
           
                  error: function (xhr, status) {
                      alert(status)
                  }

          });
          return false;
        }
        $('#check1').click(function (event) {
            debugger;
            if ($('#check1').is(':checked')) {
                document.getElementById("FromSKU").disabled = false;
                document.getElementById("ToSKU").disabled = false;
                document.getElementById("AutocompleteProductSKU").disabled = true;
                document.getElementById("AutocompleteProductStyleSKU").disabled = true;
                document.getElementById("OriginalSellingPrice").disabled = true;
                document.getElementById("NewSellingPrice").disabled = true;
                document.getElementById("NewCashPrice").disabled = true;
            } else {
                document.getElementById("FromSKU").disabled = true;
                document.getElementById("ToSKU").disabled = true;
                document.getElementById("AutocompleteProductSKU").disabled = false;
                document.getElementById("AutocompleteProductStyleSKU").disabled = false;
                document.getElementById("OriginalSellingPrice").disabled = false;
                document.getElementById("NewSellingPrice").disabled = false;
                document.getElementById("NewCashPrice").disabled = false;
            }
        });
        function Submit() {
            debugger
            $('form').validate();
            var obj = {};
            obj.MarkDown = {};
            obj.BranchList = [];
            obj.MarkDown.ProductSKU = $("#AutocompleteProductSKU").val(),
                obj.MarkDown.StyleSKU = $("#AutocompleteProductStyleSKU").val(),
                obj.MarkDown.OriginalSellingPrice = $("#OriginalSellingPrice").val(),
                obj.FromSKU = $('#FromSKU').val();
                obj.ToSKU = $('#ToSKU').val();
                obj.MarkDown.IsPercentageOriginalPrice = $("#quantity").val(),
                obj.MarkDown.NewSellingPrice = $("#NewSellingPrice").val(),
                obj.MarkDown.NewCashPrice = $("#NewCashPrice").val(),
                obj.MarkDown.EffectiveDate = $("#TodayDate").val(),
                obj.MarkDown.PercentageDecrease=$("#PercentageDecrease").val(),
                obj.MarkDown.IsActive = true
            if($('#quantity').is(':checked')){
                obj.MarkDown.IsPercentageOriginalPrice=true;
            }
            else{
                obj.MarkDown.IsPercentageOriginalPrice=false;
            }

            if ($('input:checked[name=selectedBranch]').length <= 0) {
                alert('select atleast one branch !')
            }
            else {
                $('input:checked[name=selectedBranch]').each(function () {
                    if ($(this).is(':checked'))
                        obj.BranchList.push($(this).val());
                });
                if ($('form').valid()) {
                    $.ajax({
                        type: "POST", //HTTP POST Method
                        url: '/Admin/MarkDownBranch/Create',
                        data: obj,
                        success: function (result) {
                        	loadData();
                        	Clear();
                        }
                    });
                }
            }
        }
        function Clear()
        {
            debugger;
            $("#OriginalSellingPrice").val(''),
            $("#IsPercentageOriginalPrice").val(''),
             $("#NewSellingPrice").val(''),
            $("#NewCashPrice").val(''),
            $("#Date").val(''),
            $("#AutocompleteProductSKU").val(''),
            $("#AutocompleteProductStyleSKU").val(''),
            $("#LastMarkDown").val(''),
            $("#NoMarkDown").val(''),
            $("#PercentageDecrease").val('')
        	$("#TodayDate").val(''),
            $("ToSKU").val()
        }
        $(document).ready(function () {
        	debugger
        	var newCashPrice = $("#NewCashPrice").val();
        	var OrignalPrice = $("#OriginalSellingPrice").val();
        	newCashPrice = newCashPrice.substring(0, newCashPrice.length - 2);
        	OrignalPrice = OrignalPrice.substring(0, OrignalPrice.length - 2);
        	$("#NewCashPrice").val(newCashPrice);
        	$("#OriginalSellingPrice").val(OrignalPrice);
        });
        function loadData() {
            var id = $('#ProductID').val();
            if (id != "") {
                crud='/Admin/MarkDownBranch/Detail/'+id;
                }else{
                crud='/Admin/MarkDownBranch/Detail';
            }
            $.ajax({
                url: crud,
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: 'html',
                success: function (result) {
                    $('.dvCartonDetails').html(result);
                    alert('@TempData["Success"]');
                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
		$(document).ready(function () {
			var date1=$("#LastMarkDown").val();
        	var d = new Date(date1),
	   y = d.getFullYear(),
	   m = addZero(d.getMonth() + 1),
	   d = addZero(d.getDate());
        	var date = y + '-' +m + '-' + d;
        	$("#LastMarkDown").val(date1);
        });


        $(document).ready(function () {
            debugger
            var ProductSKUList = {};
            $("#AutocompleteProductSKU").autocomplete({
                source: function (request, response) {
                    debugger
                    $.ajax({
                        url: "/Admin/MarkDownBranch/AutoCompleteProductSKUList",
                        type: "GET",
                        data: { name: request.term },
                        success: function (result) {
                            debugger
                            ProductSKUList = $.map(result, function (value, key) { return { value: value.Id, label: value}; });
                            response(ProductSKUList);

                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {
                    debugger
                    event.preventDefault();
                    $("#AutocompleteProductSKU").val(ui.item.label);
                    $("#autoCompleteProductSKUId").val(ui.item.value);
                },
                minLength: 1
            });
        })

        $(document).ready(function () {
            debugger
            var costPrice = "";
            var NoOfPrevMarkDown = "";
            var DateOfPreMarkDown = "";

            var StyleSKUList = {};
            $("#AutocompleteProductStyleSKU").autocomplete({

                source: function (request, response) {
                    var id = $('#AutocompleteProductSKU').val();
                    debugger
                    $.ajax({
                        url: "/Admin/MarkDownBranch/AutoCompleteProductStyleSKUList/"+id,
                        type: "GET",
                        data: { name: request.term },
                        success: function (result) {
                            debugger
                            StyleSKUList = $.map(result, function (value, key) { return { value: value.Id, label: value.StyleSKU }; });
                            response(StyleSKUList);

                        },
                        error: function (xhr, status) {
                            alert(status)
                        }
                    });
                },
                select: function (event, ui) {
                    debugger
                    event.preventDefault();
                    $("#AutocompleteProductStyleSKU").val(ui.item.label);
                    $("#autoCompleteProductStyleId").val(ui.item.value);
                },
                minLength: 1
            });
        })

        $('#select-all').click(function (event) {
            debugger

            // Iterate each checkbox
            $('.branches:checkbox').each(function () {
                this.checked = true;
            });

        });
        $('#select-none').click(function (event) {
            debugger
            // Iterate each checkbox
            $('.branches:checkbox').each(function () {
                this.checked = false;
            });

        });

        //for Radio btn
        $('#select-all1').click(function (event) {
            debugger

            // Iterate each checkbox
            $('.branches:checkbox').each(function () {
                this.checked = true;
            });

        });
        $('#select-none1').click(function (event) {
            debugger

            // Iterate each checkbox
            $('.branches:checkbox').each(function () {
                this.checked = false;
            });

        });
        
        function History() {
            debugger;
            $.ajax({
                url: '/Admin/MarkDownBranch/History',
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: 'html',
                success: function (result) {
                    $('.dvCartonDetails').html(result);

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }
            });
        }
        function Calculation(){
            debugger;
            var price=$('#OriginalSellingPrice').val();
            var percentage=$('#PercentageDecrease').val();
            var result=parseFloat(price)-parseFloat(price)*parseInt(percentage)/100;
            $('#NewSellingPrice').val(result);
            $('#NewCashPrice').val(result);
        }
    </script>
}
<style>
    .ui-widget-content.ui-autocomplete {
        z-index: 9999 !important;
    }
</style>