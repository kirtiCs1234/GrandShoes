@model Model.UserResetPassword
@{
    Layout = null;

}
<div class="modal-dialog">
    <div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Add Account</h4>
    </div>
    @using (Html.BeginForm("ResetPassword", "User", FormMethod.Post, new { id = "createForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="modal-body">

            <div class="row  mrgn-b-lg">
                <div class="col-md-6 col-xs-12 col-sm-6">
                    <label>New Password</label>
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", type = "Password", placeholder = "Password" } })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })


                </div>
                <div class="col-md-6 col-xs-12 col-sm-6">
                    <label>Confirm Password</label>
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", type = "Password", placeholder = "Confirm Password" } })
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
   
  <div class="modal-footer">
    <button type="button" data-backdrop="static" data-toggle="modal" data-target="#myCancelModal" id="btncancel" class="btn btn-outline-inverse cancel">Cancel</button>
    <input type="submit" value="Reset Password" class="btn btn-success popup-savebtn" />
</div>
                   
}
    </div>
</div>

<script type="text/javascript">

    $.validator.unobtrusive.parse($("#createForm"));

</script>
