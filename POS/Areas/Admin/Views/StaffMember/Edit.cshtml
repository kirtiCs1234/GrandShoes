@model Model.StaffMemberModel
@{
    ViewBag.Title = "Edit";
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">Edit Staff Member</h4>
        </div>
        @using (Html.BeginForm("Edit", "StaffMember", FormMethod.Post, new { id = "createForm", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            <div class="forms">
                <div class="col-sm-12">
                    <div class="row  mrgn-b-lg">
                        <div class="col-md-6 col-xs-12 col-sm-6">
                            <label>User </label>
                            @Html.DropDownListFor(m => m.UserId, null, "-User-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 col-xs-12 col-sm-6">
                            <label>Joining Date </label>
                            @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control date-pick", placeholder = "Joining Date", type = "text", autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row  mrgn-b-lg">
                        
                        <div class="col-md-6 col-xs-12 col-sm-6">
                            <label>Staff Status </label>
                            @Html.DropDownListFor(m => m.StaffStatusId, null, "-Staff Satus-", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StaffStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <input data-val="true"
                           data-val-number="The field StudentId must be a number."
                           data-val-required="The StudentId field is required."
                           id="IsActive"
                           name="IsActive"
                           type="hidden"
                           value="true" />
                </div>
                <div class="row  mrgn-b-lg">
                    <div class="col-md-6 col-xs-12 col-sm-6">
                        <label>Profile Pic</label>
                        <div class="pop-img">
                            @if (Model.ProfilePic != null)
                            {
                                <img class="create-user-image" id="user_img" src="~/Image/StaffMember/@Model.ProfilePic" height="50" width="50" onchange="show(this)" />
                            }


                            else
                            {
                                <img id="user_img" src="/Image/no-image.jpg" class="create-user-image" height="50" width="50" style="border:thin;" />
                            }
                        </div>

                        <input type="file" title="search image" class="" id="file" name="file" onchange="show(this)" />
                        @Html.ValidationMessageFor(model => model.ProfilePic, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-md-6 col-xs-12 col-sm-6">
                        <label>Fingure Print Access</label>
                        @Html.CheckBoxFor(m => m.IsFingurPrintAccess)
                    </div>
                </div>
                    <div class="modal-footer">
                        <button type="button" data-backdrop="static" data-toggle="modal" data-target="#myCancelModal" id="btncancel" class="btn btn-outline-inverse cancel">Cancel</button>
                        <input type="submit" value="Update" class="btn btn-success popup-savebtn" />
                    </div>
                
            </div>
        }
    </div>
 </div>
    <script type="text/javascript">
       

        $.validator.unobtrusive.parse($("#createForm"))



        function show(input) {
            debugger;
            if (input.files && input.files[0]) {
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('.create-user-image').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }

        $(function () {
            $('.date-pick').datepicker();
        })
    </script>



